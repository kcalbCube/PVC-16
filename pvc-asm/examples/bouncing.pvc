.org {11h * 2h}
dw @vbi

.org 80h
bpos: db 0h 0h
vector: db 2h 1h

process:
	push %a
	push %b
	mov %a [@bpos] ; {h:x, l:y} ;
	mov %b [@vector] ; {h:dx, l:dy} ;
	add %ah %bh
	add %al %bl
	cmp %ah 11h
	cng jmp @.skip_xoverflow_handle
	cmp %ah 14h
	cg jmp @.overflow_left
	mov %ah 11h
	jmp @.xoverflow_finally
	.overflow_left:
		mov %ah 0h
	.xoverflow_finally:
		neg %bh
	.skip_xoverflow_handle:
	cmp %al 5Ch
	cng jmp @.skip_yoverflow_handle
	cmp %al 60h
	cg jmp @.overflow_up
	mov %al 5Bh
	jmp @.yoverflow_finally
	.overflow_up:
		mov %al 1h
	.yoverflow_finally:
		neg %bl
	.skip_yoverflow_handle:
	mov [@bpos] %a
	mov [@vector] %b
	pop %b
	pop %a
	ret

render:
	push %a
	push %b

	mov %a [@bpos]  ; {h:x, l:y} ;
	mov %b %al
	mul %b 12h
	lea %b [%ah + @T1]
	
	mov %a 8h
	.loop:
		movb [%b] FFh
		add %b 12h
		loop %a @.loop
	
	pop %b
	pop %a
	ret	

start:
	mov %sp FFFFh
	outb 20h 1h
	outb 21h 5h
	out  22h @T1
	
	mov %al 1h
	int 10h
	
	.loop:
		jmp @.loop

vbi:
	memset [@T1] 3A98h 0h
	call @render
	call @process
	iret

.org 1000h
T1: